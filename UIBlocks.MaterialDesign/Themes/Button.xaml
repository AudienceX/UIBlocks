<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UIBlocks.MaterialDesign.Themes"
                    xmlns:lib="clr-namespace:UIBlocks.MaterialDesign"
                    xmlns:converters="clr-namespace:UIBlocks.MaterialDesign.Converters">
    <!--引用阴影效果资源字典-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/UIBlocks.MaterialDesign;component/Themes/Shadow.xaml" />
        <ResourceDictionary Source="pack://application:,,,/UIBlocks.MaterialDesign;component/Colors/ColorRoot.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--控件获取焦点的状态/-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--设置圆形按钮样式。/-->
    <Style x:Key="MDCircleButton" TargetType="{x:Type Button}">
        <Setter Property="lib:ShadowEditor.ShadowDepth" Value="Depth2" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <AdornerDecorator>
                            <AdornerDecorator.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                            </AdornerDecorator.CacheMode>
                            <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{TemplateBinding BorderThickness}"
                                     Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(lib:ShadowEditor.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}"
                                     x:Name="border" />
                        </AdornerDecorator>
                        <lib:Ripple Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Clip="{Binding ElementName=GeometryEllipse, Path=RenderedGeometry}"
                                    ClipToBounds="True" />
                        <Ellipse x:Name="GeometryEllipse" Fill="Transparent" IsHitTestVisible="False" Focusable="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="lib:ShadowEditor.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MDCirclebutton_LightPurple" TargetType="Button" BasedOn="{StaticResource MDCircleButton}">
        <Setter Property="Background" Value="{DynamicResource Purple200Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Purple200Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Purple200ForegroundBrush}" />
    </Style>
    <Style x:Key="MDCirclebutton_MidPurple" TargetType="Button" BasedOn="{StaticResource MDCircleButton}">
        <Setter Property="Background" Value="{DynamicResource Purple500Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Purple500Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Purple500ForegroundBrush}" />
    </Style>
    <Style x:Key="MDCirclebutton_DarkPurple" TargetType="Button" BasedOn="{StaticResource MDCircleButton}">
        <Setter Property="Background" Value="{DynamicResource Purple700Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Purple700Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Purple700ForegroundBrush}" />
    </Style>

    <!--设置方形按钮样式-->
    <Style TargetType="Button" x:Key="MDSquareButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="lib:ShadowEditor.ShadowDepth" Value="Depth1" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16 4 16 4" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator>
                            <AdornerDecorator.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                            </AdornerDecorator.CacheMode>
                            <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    x:Name="border"
                                    Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(lib:ShadowEditor.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}" />
                        </AdornerDecorator>
                        <lib:Ripple Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Clip="{Binding ElementName=GeometrySquare, Path=RenderedGeometry}"
                                    ClipToBounds="True" />
                        <Rectangle x:Name="GeometrySquare" Fill="Transparent" IsHitTestVisible="False"
                                   Focusable="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="lib:ShadowEditor.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource MDSquareButton}" x:Key="MDSquareButton_LightPurple">
        <Setter Property="Background" Value="{DynamicResource Purple200Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Purple200Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Purple200ForegroundBrush}" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MDSquareButton}" x:Key="MDSquareButton_MidPurple">
        <Setter Property="Background" Value="{DynamicResource Purple500Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Purple500Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Purple500ForegroundBrush}" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MDSquareButton}" x:Key="MDSquareButton_DarkPurple">
        <Setter Property="Background" Value="{DynamicResource Purple700Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Purple700Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Purple700ForegroundBrush}" />
    </Style>

    <!--设置方形无格式按钮-->
    <Style TargetType="Button" x:Key="MDFlatButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource Purple500Brush}" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16 4 16 4" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" x:Name="border" CornerRadius="2">
                            <lib:Ripple Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource MDFlatButtonClick}" />
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource MDFlatButtonClick}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--设置开关按钮样式-->
    <Style x:Key="MDSwithToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource Purple500Brush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut" />
                        <Storyboard x:Key="ShowRipple">
                            <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0.26" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="RippleThumb"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetName="RippleThumb"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             From="1" To="2.5" Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="HideRipple">
                            <DoubleAnimation Storyboard.TargetName="RippleThumb" Storyboard.TargetProperty="Opacity"
                                             EasingFunction="{StaticResource RippleEasingFunction}"
                                             To="0" Duration="0:0:0.3" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Viewbox Width="34">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*" To="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                Storyboard.TargetName="ThumbHolder">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Checked" To="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                Storyboard.TargetName="ThumbHolder">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="23.5" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            Storyboard.TargetName="ThumbHolder"
                                            Duration="0" To="23.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            Storyboard.TargetName="ThumbHolder"
                                            Duration="0" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="Track"
                                       Fill="Black" HorizontalAlignment="Left" Height="15" Margin="4.211,5,4.211,0"
                                       Stroke="{x:Null}" VerticalAlignment="Top" Width="40" RadiusY="7.5" RadiusX="7.5"
                                       Opacity="0.26" />

                            <Grid x:Name="ThumbHolder"
                                  HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Ellipse x:Name="RippleThumb"
                                         Fill="{DynamicResource Purple200Brush}"
                                         Height="25" Width="25"
                                         Opacity="0.26"
                                         Margin="0"
                                         HorizontalAlignment="Center" VerticalAlignment="Center"
                                         RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <AdornerDecorator>
                                    <AdornerDecorator.CacheMode>
                                        <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                                    </AdornerDecorator.CacheMode>
                                    <Ellipse x:Name="Thumb"
                                             Fill="#FFFAFAFA" Stroke="{x:Null}"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             Width="25" Height="25"
                                             Margin="0,0,0,0"
                                             RenderTransformOrigin="0.5,0.5"
                                             Effect="{DynamicResource ShadowDepth3}" />
                                </AdornerDecorator>
                                <Grid.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Grid.RenderTransform>
                            </Grid>
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Thumb" Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                            <Setter TargetName="Track" Property="Fill" Value="{DynamicResource Purple500Brush}" />
                        </Trigger>
                        <Trigger Property="Button.IsDefaulted" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowRipple}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideRipple}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Fill" Value="#BDBDBD" />
                            <Setter TargetName="Track" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="Black" Opacity=".26" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>